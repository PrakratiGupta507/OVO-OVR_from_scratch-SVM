# -*- coding: utf-8 -*-
"""Q1(ii).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BMxTI5QUyTGRGIirkm8bjd9W6HJVaA7f
"""

from google.colab import drive
drive.mount('/content/gdrive')

import matplotlib.pyplot as plt
import numpy as np 
import pandas as pd
from scipy.io import loadmat
from PIL import Image
import pandas as pd
import joblib
import seaborn as sns
from sklearn.manifold import TSNE
from sklearn.decomposition import PCA

def unpickle(file):
    import pickle
    with open(file, 'rb') as fo:
        dict = pickle.load(fo, encoding='bytes')
    return dict

train_1 = unpickle('/content/gdrive/My Drive/ML assignment 3/data_batch_1')
train_2 = unpickle('/content/gdrive/My Drive/ML assignment 3/data_batch_2')
train_3 = unpickle('/content/gdrive/My Drive/ML assignment 3/data_batch_3')
train_4 = unpickle('/content/gdrive/My Drive/ML assignment 3/data_batch_4')
train_5 = unpickle('/content/gdrive/My Drive/ML assignment 3/data_batch_5')
test_data = unpickle('/content/gdrive/My Drive/ML assignment 3/test_batch')

labels = np.vstack((np.array(train_1[b'labels']).reshape(-1,1), np.array(train_2[b'labels']).reshape(-1,1), np.array(train_3[b'labels']).reshape(-1,1), np.array(train_4[b'labels']).reshape(-1,1), np.array(train_5[b'labels']).reshape(-1,1)))
data = np.vstack((train_1[b'data'], train_2[b'data'], train_3[b'data'], train_4[b'data'], train_5[b'data']))
data = np.array(data)
data.shape

labels.shape

pca = PCA(0.9)
principalComponents = pca.fit_transform(data)

joblib.dump(principalComponents, '/content/gdrive/My Drive/ML assignment 3/data.pkl')

data = joblib.load('/content/gdrive/My Drive/ML assignment 3/data.pkl')

data.shape

model = TSNE(n_components=2).fit_transform(data)
joblib.dump(model, '/content/gdrive/My Drive/ML assignment 3/TSNEmodelQ1(2).pkl')

model1 = joblib.load('/content/gdrive/My Drive/ML assignment 3/TSNEmodelQ1(2).pkl')

np.unique(labels)

tsne_data=model1
tsne_data = pd.DataFrame(tsne_data)
tsne_data.insert(loc=1,column='labels',value = labels)
x=tsne_data[0]
y=tsne_data[1]
z=tsne_data['labels']
df = pd.DataFrame({"Zero_value":x,"One_value":y,"labels":z})
df.to_csv('/content/gdrive/My Drive/ML assignment 3/TSNEdf.csv')

file1 = pd.read_csv("/content/gdrive/My Drive/ML assignment 3/TSNEdf.csv")

plt.figure(figsize=(15,10))
lables=(['0','1','2','3','4','5','6','7','8','9'])
sns.scatterplot(data=file1,x="Zero_value", y="One_value",hue='labels',palette="dark")
plt.xlabel("sampel-0")
plt.ylabel("sampel-1")
plt.legend()
plt.show()

